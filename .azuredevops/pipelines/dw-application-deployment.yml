# This workflow will deploy the application resources
name: dw-application-deployment
trigger: none

parameters:
  - name: env
    displayName: Environment
    type: string
    default: dev
    values:
      - dev

jobs:
  - job: lint
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - bash: az bicep build --file ./datawarehouse/main.application.bicep

  - job: validate
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: lint
    variables:
      - name: app-variables
      - group: DW-Application-Variables
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(azureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment sub validate --name "DW-App-$(Build.BuildId)" --location $(location) --template-file ./datawarehouse/main.application.bicep \
              --parameters ./datawarehouse/app-parameters/{{ parameters.env }}.parameters.bicepparam \
                           adminUsername=$(adminUsername)

  - job: preview
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: [lint, validate]
    variables:
      - name: app-variables
      - group: DW-Application-Variables
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(azureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az config set bicep.use_binary_from_path=false --only-show-errors
            az deployment sub what-if --location $(location) --template-file ./datawarehouse/main.application.bicep \
              --parameters ./datawarehouse/app-parameters/{{ parameters.env }}.parameters.bicepparam \
                           adminUsername=$(adminUsername)

  - job: deploy
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: [lint, validate, preview]
    variables:
      - name: app-variables
      - group: DW-Application-Variables
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - task: AzureCLI@2
        name: deploy
        inputs:
          azureSubscription: $(azureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          failOnStandardError: true
          inlineScript: |
            az config set bicep.use_binary_from_path=false --only-show-errors
            output=$(az stack sub create --name "dw-application-deployment-stack" --location $(location) --template-file ./datawarehouse/main.application.bicep \
              --parameters ./datawarehouse/app-parameters/{{ parameters.env }}.parameters.bicepparam \
                           adminUsername=$(adminUsername) \
                           --deny-settings-mode none --action-on-unmanage detach --yes)
            echo $output | jq .
            appResourceGroup=$(echo $output | jq -r '.properties.outputs.appResourceGroupName.value')
            echo "##vso[task.setvariable variable=appResourceGroupName;isoutput=true]$appResourceGroup"