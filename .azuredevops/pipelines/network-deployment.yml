# This workflow will deploy the network resources
name: network-deployment
trigger: none


parameters:
  - name: env
    displayName: Environment
    type: string
    default: dev
    values:
      - dev
      - systemtest_manual
      - systemtest_auto
      - systemtest_int
      - uat
      - pre_prod
      - production

jobs:
  - job: lint
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - bash: az bicep build --file ./5.spoke-network/main.network.bicep

  - job: validate
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: [lint]
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(${{ parameters.env }})
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az config set bicep.use_binary_from_path=false --only-show-errors
            az deployment sub validate --name "Network-$(Build.BuildId)" --location $(location) --template-file ./5.spoke-network/main.network.bicep  \
              --parameters ./5.spoke-network/network-parameters/${{ parameters.env }}.parameters.bicepparam

  - job: preview
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: [lint, validate]
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(${{ parameters.env }})
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az config set bicep.use_binary_from_path=false --only-show-errors
            az deployment sub what-if --location $(location) --template-file ./5.spoke-network/main.network.bicep \
              --parameters ./5.spoke-network/network-parameters/${{ parameters.env }}.parameters.bicepparam

  - job: deploy
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: [preview]
    steps:
      - checkout: self
      - bash: |
          az bicep install
          az bicep version
        displayName: 'Install Bicep CLI'
      - task: AzureCLI@2
        name: deploy
        inputs:
          azureSubscription: $(${{ parameters.env }})
          scriptType: bash
          scriptLocation: inlineScript
          failOnStandardError: true
          inlineScript: |
            az config set bicep.use_binary_from_path=false --only-show-errors
            output=$(az stack sub create --name "network-deployment-stack" --location $(location) --template-file ./5.spoke-network/main.network.bicep  \
              --parameters ./5.spoke-network/network-parameters/${{ parameters.env }}.parameters.bicepparam \
                           --deny-settings-mode none --action-on-unmanage deleteResources --yes)
            echo $output | jq .
            spokeVNetId=$(echo $output | jq -r '.spokeVNetId.value')
            spokeVNetName=$(echo $output | jq -r '.spokeVNetName.value')
            echo "##vso[task.setvariable variable=spokeVNetId;isoutput=true]$spokeVNetId"
            echo "##vso[task.setvariable variable=spokeVNetName;isoutput=true]$spokeVNetName"