# This workflow will deploy the LZA in ADO
name: 1.core-service-lza-deployment

trigger:
  - main

pr:
  - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The lint job performs linting on the bicep code
  - job: lint
    pool: 
      vmImage: 'ubuntu-latest'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under so your job can access it
      - checkout: self

      # Runs the Bicep linter to ensure build is successful
      - bash: az bicep build --file ./1.core-services/main.bicep

  - job: validate
    pool: 
      vmImage: 'ubuntu-latest'
    dependsOn: [lint]
    steps:
      - checkout: self
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment mg validate --name "ACA-$(Build.BuildId)" --location $(location) --template-file ./1.core-services/main.bicep --management-group-id $(management-group-id) --parameters managementSubscriptionId=$(managementSubscriptionId)

  - job: preview
    pool: 
      vmImage: 'ubuntu-latest'
    dependsOn: [lint, validate]
    steps:
      - checkout: self
      - task: AzureCLI@2 
        inputs: 
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment mg what-if \
              --location $(location) \
              --template-file ./1.core-services/main.bicep \
              --management-group-id $(management-group-id) \
              --parameters managementSubscriptionId=$(managementSubscriptionId)
  - job: deploy
    pool: 
      vmImage: 'ubuntu-latest'
    dependsOn: [preview]
    steps:
      - checkout: self
      - task: AzureCLI@2 
        name: deploy
        inputs: 
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          failOnStandardError: true
          inlineScript: |
            output=$(az deployment mg create \
              --name "core-services-$(Build.BuildId)" \
              --location $(location) \
              --template-file ./1.core-services/main.bicep \
              --management-group-id $(management-group-id) \
              --parameters managementSubscriptionId=$(managementSubscriptionId))